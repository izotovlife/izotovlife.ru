# –ü—É—Ç—å: backend/settings.py
# –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Django-–ø—Ä–æ–µ–∫—Ç–∞ IzotovLife (News Aggregator, Django + React)
# –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç: PostgreSQL —á–µ—Ä–µ–∑ .env, DRF, JWT, CORS, —Å–æ—Ü.–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é, –ø–æ—á—Ç—É –∏ –∑–∞—â–∏—Ç—É –∞–¥–º–∏–Ω–∫–∏.
# –û–ë–ù–û–í–õ–ï–ù–ò–Ø (–Ω–∏—á–µ–≥–æ –Ω–µ —É–¥–∞–ª–µ–Ω–æ):
#   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞/—Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è:
#        PROJECT_NAME, FRONTEND_BASE_URL, FRONTEND_LOGIN_URL, FRONTEND_RESET_URL
#   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –±–µ–∑–æ–ø–∞—Å–Ω—ã–π DEV-—Ñ–æ–ª–ª–±–µ–∫ –ø–æ—á—Ç—ã: –ø—Ä–∏ DEBUG –∏ –ø—É—Å—Ç–æ–º EMAIL_HOST_PASSWORD –ø–∏—Å—å–º–∞ –∏–¥—É—Ç –≤ –∫–æ–Ω—Å–æ–ª—å
#   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω ACCOUNT_DEFAULT_HTTP_PROTOCOL –¥–ª—è allauth
#   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω EMAIL_SUBJECT_PREFIX (–±—Ä–µ–Ω–¥ –≤ —Ç–µ–º–µ)
#   ‚úÖ –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—Ä–æ–∫—Å–∏ (SECURE_PROXY_SSL_HEADER) —á–µ—Ä–µ–∑ USE_X_FORWARDED_PROTO
#   ‚úÖ –ù–∏—á–µ–≥–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –Ω–µ —É–¥–∞–ª–µ–Ω–æ ‚Äî —Ç–æ–ª—å–∫–æ –¥–æ–ø–æ–ª–Ω–µ–Ω–æ
#   ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π CORS –ø—Ä–∏ withCredentials (whitelist –≤–º–µ—Å—Ç–æ allow_all)
#   ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: DEV_LAN_IP –∏–∑ .env –¥–ª—è —Ä–∞–±–æ—Ç—ã –ø–æ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä 192.168.0.58)
#   ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û –î–õ–Ø –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò/–í–•–û–î–ê: allauth –≤—Ö–æ–¥ –ø–æ –ª–æ–≥–∏–Ω—É –ò–õ–ò email, –ø—Ä–∏–≤—è–∑–∫–∞ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ RegisterSerializer,
#      —ç–∫—Å–ø–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ Authorization –¥–ª—è —Ñ—Ä–æ–Ω—Ç–∞, –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Ñ–ª–∞–≥–∏ SameSite –¥–ª—è –∫—É–∫–∏, –¥–æ–±–∞–≤–ª–µ–Ω–∞ SessionAuth –≤ DRF.
#   ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: SOCIALACCOUNT_PROVIDERS ‚Äî —Ç–µ–ø–µ—Ä—å 'APP' –∑–∞–¥–∞—ë—Ç—Å—è –¢–û–õ–¨–ö–û –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ client_id –∏ secret –≤ .env,
#      –∏–Ω–∞—á–µ allauth –±–µ—Ä—ë—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –∞–¥–º–∏–Ω–∫–∏ (SocialApp). –≠—Ç–æ —É—Å—Ç—Ä–∞–Ω—è–µ—Ç –æ—à–∏–±–∫—É client_id=None.
#   ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û (–≤–∞–∂–Ω–æ –¥–ª—è VK —á–µ—Ä–µ–∑ ngrok): –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π HTTPS –¥–ª—è allauth, –¥–æ–≤–µ—Ä–∏–µ –∫ –ø—Ä–æ–∫—Å–∏, –∏ whitelists –¥–ª—è ngrok-–¥–æ–º–µ–Ω–∞.

from pathlib import Path
from datetime import timedelta
from urllib.parse import urlparse  # ‚úÖ –¥–ª—è —Ä–∞–∑–±–æ—Ä–∫–∏ FRONTEND_BASE_URL
import os
from dotenv import load_dotenv

# =======================
# –ë–ê–ó–û–í–´–ï –ü–£–¢–ò –ò –ó–ê–ì–†–£–ó–ö–ê .ENV
# =======================
BASE_DIR = Path(__file__).resolve().parent.parent

# –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ .env (–≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –ø–æ–¥—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç—Å—è)
dotenv_path = BASE_DIR / ".env"
if dotenv_path.exists():
    load_dotenv(dotenv_path)
    print(f".env –∑–∞–≥—Ä—É–∂–µ–Ω: {dotenv_path}")
else:
    print(f".env –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: {dotenv_path}")

# =======================
# –ö–û–ù–°–¢–ê–ù–¢–´ –ü–†–û–ï–ö–¢–ê / –§–†–û–ù–¢–ï–ù–î–ê (–î–û–ë–ê–í–õ–ï–ù–û –î–õ–Ø –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò/–°–ë–†–û–°–ê)
# =======================
PROJECT_NAME = os.getenv("PROJECT_NAME", "IzotovLife")

# –ë–∞–∑–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞: –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫ –≤ –ø–∏—Å—å–º–∞—Ö –∏ whitelists CORS/CSRF
FRONTEND_BASE_URL = os.getenv("FRONTEND_BASE_URL", "http://localhost:3001")

# –ö—É–¥–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏—Ç—å/—Å—Å—ã–ª–∞—Ç—å—Å—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ ActivateAccountView)
FRONTEND_LOGIN_URL = os.getenv("FRONTEND_LOGIN_URL", f"{FRONTEND_BASE_URL}/login")

# –ë–∞–∑–æ–≤—ã–π –ø—É—Ç—å —Ñ–æ—Ä–º—ã —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ PasswordResetRequestView)
# –ò—Ç–æ–≥–æ–≤–∞—è —Å—Å—ã–ª–∫–∞ —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è –∫–∞–∫: {FRONTEND_RESET_URL}/{uid}/{token}/
FRONTEND_RESET_URL = os.getenv("FRONTEND_RESET_URL", f"{FRONTEND_BASE_URL}/reset-password")

# ‚úÖ –ù–æ–≤—ã–π —É–¥–æ–±–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä: –≤–∞—à LAN-IP —Ñ—Ä–æ–Ω—Ç–∞ –≤ dev (–Ω–∞–ø—Ä–∏–º–µ—Ä "192.168.0.58")
DEV_LAN_IP = os.getenv("DEV_LAN_IP", "").strip()

# üîí NGROK/HTTPS (–î–û–ë–ê–í–õ–ï–ù–û): –ø—É–±–ª–∏—á–Ω—ã–π https-–¥–æ–º–µ–Ω (–¥–ª—è —Ç–µ—Å—Ç–æ–≤ —á–µ—Ä–µ–∑ ngrok)
NGROK_HTTPS_DOMAIN = os.getenv(
    "NGROK_HTTPS_DOMAIN",
    "interimperial-untensile-joanie.ngrok-free.dev"  # ‚Üê –º–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤ .env –ø—Ä–∏ —Å–º–µ–Ω–µ —Ç—É–Ω–Ω–µ–ª—è
).strip()

# =======================
# –ë–ê–ó–û–í–´–ï –ù–ê–°–¢–†–û–ô–ö–ò
# =======================
SECRET_KEY = os.getenv("SECRET_KEY", "dev-secret-change-me")
DEBUG = os.getenv("DEBUG", "True").lower() in ("true", "1", "yes")

if DEBUG:
    ALLOWED_HOSTS = [
        "127.0.0.1",
        "localhost",
        "0.0.0.0",
        "testserver",
        # –æ—Å—Ç–∞–ª—Å—è –≤–∞—à —Å—Ç–∞—Ä—ã–π IP, –æ—Å—Ç–∞–≤–ª—è–µ–º –µ–≥–æ, –æ–Ω –Ω–µ –º–µ—à–∞–µ—Ç
        "192.168.0.33",
    ]
    # ‚úÖ –¥–æ–±–∞–≤–∏–º DEV_LAN_IP –µ—Å–ª–∏ –∑–∞–¥–∞–Ω
    if DEV_LAN_IP:
        ALLOWED_HOSTS.append(DEV_LAN_IP)
    # ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: —Ä–∞–∑—Ä–µ—à–∞–µ–º ngrok-–¥–æ–º–µ–Ω
    if NGROK_HTTPS_DOMAIN:
        ALLOWED_HOSTS += [NGROK_HTTPS_DOMAIN, ".ngrok-free.dev"]
    # dedup
    ALLOWED_HOSTS = list(dict.fromkeys(ALLOWED_HOSTS))
else:
    ALLOWED_HOSTS = ["izotovlife.ru", "www.izotovlife.ru"]

# =======================
# –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
# =======================
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_extensions",

    # third-party
    "rest_framework",
    "corsheaders",
    "django.contrib.sites",
    "django.contrib.sitemaps",
    "rest_framework.authtoken",

    # —Å–æ—Ü-–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.google",
    "allauth.socialaccount.providers.vk",
    "allauth.socialaccount.providers.yandex",

    # dj-rest-auth
    "dj_rest_auth",
    "dj_rest_auth.registration",

    # local apps
    "accounts",
    "news.apps.NewsConfig",
    "moderation",
    "security",
    "rssfeed",
    "pages",
    "ckeditor",
    "image_guard",  # <-- –≤–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ-—Å—Ç–æ—Ä–æ–∂
]

# =======================
# MIDDLEWARE
# =======================
MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",  # –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ–¥–Ω–∏–º –∏–∑ –ø–µ—Ä–≤—ã—Ö
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    # "django.middleware.csrf.CsrfViewMiddleware",  # –ø—Ä–∏ —á–∏—Å—Ç–æ–º JWT –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –≤—ã–∫–ª—é—á–µ–Ω–Ω—ã–º
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "allauth.account.middleware.AccountMiddleware",
    "security.middleware.AdminInternalGateMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
]

ROOT_URLCONF = "backend.urls"

# =======================
# TEMPLATES
# =======================
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "backend" / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",  # allauth —Ç—Ä–µ–±—É–µ—Ç —ç—Ç–æ
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "backend.context_processors.site_domain",
            ],
        },
    },
]

WSGI_APPLICATION = "backend.wsgi.application"

# =======================
# –ë–ê–ó–ê –î–ê–ù–ù–´–•
# =======================
POSTGRES_DB = os.getenv("POSTGRES_DB")
POSTGRES_USER = os.getenv("POSTGRES_USER")
POSTGRES_PASSWORD = os.getenv("POSTGRES_PASSWORD")

if POSTGRES_DB and POSTGRES_USER and POSTGRES_PASSWORD:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.postgresql",
            "NAME": POSTGRES_DB,
            "USER": POSTGRES_USER,
            "PASSWORD": POSTGRES_PASSWORD,
            "HOST": os.getenv("POSTGRES_HOST", "localhost"),
            "PORT": os.getenv("POSTGRES_PORT", "5432"),
        }
    }
else:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": BASE_DIR / "db.sqlite3",
        }
    }

# =======================
# –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–Ø
# =======================
AUTH_USER_MODEL = "accounts.User"
AUTH_PASSWORD_VALIDATORS = []

AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend",
]

# =======================
# –õ–û–ö–ê–õ–ò–ó–ê–¶–ò–Ø
# =======================
LANGUAGE_CODE = "ru-ru"
TIME_ZONE = "Europe/Moscow"
USE_I18N = True
USE_TZ = True

# =======================
# –°–¢–ê–¢–ò–ö–ê –ò –ú–ï–î–ò–ê
# =======================
STATIC_URL = "/static/"
STATICFILES_DIRS = [BASE_DIR / "static"]
STATIC_ROOT = BASE_DIR / "staticfiles"

MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# =======================
# CORS + CSRF (–æ–±–Ω–æ–≤–ª–µ–Ω–æ)
# =======================

# –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –≤–∞—à–∏ —Å—Ç—Ä–æ–∫–∏ ‚Äî –æ—Å—Ç–∞–≤–ª—è—é (–Ω–∏–∂–µ –ø–µ—Ä–µ–∑–∞–¥–∞–¥–∏–º whitelist-–∞–º–∏)
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True

# üîé –≠–∫—Å–ø–æ–Ω–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ Authorization –¥–ª—è —Ñ—Ä–æ–Ω—Ç–∞ (—É–¥–æ–±–Ω–æ –ø—Ä–∏ –æ—Ç–ª–∞–¥–∫–µ/–∞–Ω–∞–ª–∏—Ç–∏–∫–µ)
CORS_EXPOSE_HEADERS = ["Content-Type", "Authorization"]  # ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û

# –°–ø–∏—Å–æ–∫ –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–ª—è CSRF-—Ç–æ–∫–µ–Ω–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ DEBUG)
CSRF_TRUSTED_ORIGINS = [
    "http://localhost",
    "http://127.0.0.1",
    "http://192.168.0.33",
    "http://localhost:3000",
    "http://127.0.0.1:3000",
    "http://localhost:3003",
    "http://127.0.0.1:3003",
    "http://192.168.0.33:3003",
]

CSRF_TRUSTED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
    "http://localhost:3001",
    "http://127.0.0.1:3001",
    "http://localhost:3002",
    "http://127.0.0.1:3002",
    "http://192.168.0.33:3000",
    "http://localhost:3003",
    "http://127.0.0.1:3003",
]

# ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–´–ô DEV-CORS/CSRF —Å credential'–∞–º–∏:
# django-cors-headers –Ω–µ –ª—é–±–∏—Ç –ø–∞—Ä—É (CORS_ALLOW_ALL_ORIGINS=True) + (CORS_ALLOW_CREDENTIALS=True).
# –ü–æ—ç—Ç–æ–º—É –≤ DEBUG —Å–≤–æ–¥–∏–º –∫ whitelist.
if DEBUG:
    # —Ä–∞–∑–±–æ—Ä URL —Ñ—Ä–æ–Ω—Ç–∞
    parsed = urlparse(FRONTEND_BASE_URL)
    origin_from_front = f"{parsed.scheme}://{parsed.hostname}:{parsed.port or (80 if parsed.scheme=='http' else 443)}"

    # —è–≤–Ω—ã–π whitelist CORS
    CORS_ALLOW_ALL_ORIGINS = False
    CORS_ALLOWED_ORIGINS = [
        origin_from_front,
        "http://localhost:3000",
        "http://127.0.0.1:3000",
        "http://localhost:3001",
        "http://127.0.0.1:3001",
        "http://localhost:3002",
        "http://127.0.0.1:3002",
        "http://localhost:3003",
        "http://127.0.0.1:3003",
    ]
    # LAN-IP —Ñ—Ä–æ–Ω—Ç–∞ (–µ—Å–ª–∏ –∑–∞–¥–∞–Ω)
    if DEV_LAN_IP:
        CORS_ALLOWED_ORIGINS += [
            f"http://{DEV_LAN_IP}:3000",
            f"http://{DEV_LAN_IP}:3001",
            f"http://{DEV_LAN_IP}:3002",
            f"http://{DEV_LAN_IP}:3003",
        ]
    # ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: —Ä–∞–∑—Ä–µ—à–∞–µ–º —Ñ—Ä–æ–Ω—Ç/–±–µ–∫ –ø–æ ngrok (https)
    if NGROK_HTTPS_DOMAIN:
        CORS_ALLOWED_ORIGINS += [f"https://{NGROK_HTTPS_DOMAIN}"]

    # regex –Ω–∞ –ª—é–±—ã–µ –ª–æ–∫–∞–ª—å–Ω—ã–µ 3xxx
    CORS_ALLOWED_ORIGIN_REGEXES = [
        r"^http://localhost:\d+$",
        r"^http://127\.0\.0\.1:\d+$",
    ] + ([rf"^http://{DEV_LAN_IP}:\d+$"] if DEV_LAN_IP else [])

    # –æ–±—ä–µ–¥–∏–Ω—ë–Ω–Ω—ã–π CSRF-whitelist (–ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –≤–∞—à–∏ –¥–≤–∞ –±–ª–æ–∫–∞ –≤—ã—à–µ)
    CSRF_TRUSTED_ORIGINS = list(dict.fromkeys(
        CORS_ALLOWED_ORIGINS + [
            origin_from_front,
            "http://localhost",
            "http://127.0.0.1",
        ]
    ))
    # ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: ngrok-–¥–æ–º–µ–Ω –≤ CSRF (https)
    if NGROK_HTTPS_DOMAIN and f"https://{NGROK_HTTPS_DOMAIN}" not in CSRF_TRUSTED_ORIGINS:
        CSRF_TRUSTED_ORIGINS.append(f"https://{NGROK_HTTPS_DOMAIN}")

# =======================
# DRF
# =======================
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
        # "rest_framework.authentication.SessionAuthentication",
    ),
    "DEFAULT_PERMISSION_CLASSES": (
        "rest_framework.permissions.AllowAny",
    ),
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 30,
}

# ‚öôÔ∏è –î–ª—è —Å–æ—Ü-–ª–æ–≥–∏–Ω–∞ —á–µ—Ä–µ–∑ allauth —É–¥–æ–±–Ω–æ —Ä–∞–∑—Ä–µ—à–∏—Ç—å —Å–µ—Å—Å–∏–æ–Ω–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –∏ –¥–ª—è DRF-–≤—å—é (–Ω–µ –º–µ—à–∞–µ—Ç JWT)
# (–æ—Å—Ç–∞–≤–ª—è–µ–º —Ä–∞–Ω—å—à–µ –∑–∞–¥–∞–Ω–Ω—ã–π –±–ª–æ–∫ –∏ –î–û–ë–ê–í–õ–Ø–ï–ú —è–≤–Ω–æ–µ –≤–∫–ª—é—á–µ–Ω–∏–µ SessionAuthentication)
REST_FRAMEWORK["DEFAULT_AUTHENTICATION_CLASSES"] = (
    "rest_framework_simplejwt.authentication.JWTAuthentication",
    "rest_framework.authentication.SessionAuthentication",  # ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û
)

# —Ç—Ä–æ—Ç—Ç–ª–∏–Ω–≥ –¥–ª—è API (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ)
REST_FRAMEWORK.setdefault("DEFAULT_THROTTLE_CLASSES", [
    "rest_framework.throttling.AnonRateThrottle",
    "rest_framework.throttling.UserRateThrottle",
])
REST_FRAMEWORK.setdefault("DEFAULT_THROTTLE_RATES", {})

# –±–∞–∑–æ–≤—ã–µ –ª–∏–º–∏—Ç—ã –¥–ª—è –≤—Å–µ—Ö API-–∑–∞–ø—Ä–æ—Å–æ–≤ + –æ—Ç–¥–µ–ª—å–Ω—ã–µ –¥–ª—è —Ñ–æ—Ä–º—ã –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
REST_FRAMEWORK["DEFAULT_THROTTLE_RATES"].update({
    "anon": "1000/day",          # –±–∞–∑–æ–≤—ã–π –ª–∏–º–∏—Ç –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    "user": "5000/day",          # –±–∞–∑–æ–≤—ã–π –ª–∏–º–∏—Ç –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    "suggest_burst": "5/min",    # –∫–æ—Ä–æ—Ç–∫–∏–π –ª–∏–º–∏—Ç –¥–ª—è —Ñ–æ—Ä–º—ã "–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å"
    "suggest_sustained": "20/day",  # —Å—É—Ç–æ—á–Ω—ã–π –ª–∏–º–∏—Ç –¥–ª—è —Ñ–æ—Ä–º—ã "–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å"
})

# =======================
# JWT
# =======================
SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(hours=8),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=7),
    "AUTH_HEADER_TYPES": ("Bearer",),
}

# =======================
# –ü–†–û–ß–ï–ï
# =======================
SECURITY_ADMIN_SESSION_KEY = "admin_internal_allowed"
SITE_ID = 1
SITE_DOMAIN = os.getenv("SITE_DOMAIN", "http://127.0.0.1:8000")
TRUSTED_ADMIN_IPS = [
    ip.strip()
    for ip in os.getenv("TRUSTED_ADMIN_IPS", "127.0.0.1,::1").split(",")
    if ip.strip()
]

# üí° –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ SameSite –¥–ª—è –∫—É–∫ (–≤ —Ç.—á. –¥–ª—è allauth-–ø–æ–ø–∞–ø–∞ ‚Äî –Ω–µ –ø–æ–≤—Ä–µ–¥–∏—Ç)
SESSION_COOKIE_SAMESITE = "Lax"  # ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û
CSRF_COOKIE_SAMESITE = "Lax"     # ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û

if DEBUG:
    SECURE_SSL_REDIRECT = False
    CSRF_COOKIE_SECURE = False
    SESSION_COOKIE_SECURE = False
else:
    SECURE_SSL_REDIRECT = True
    CSRF_COOKIE_SECURE = True
    SESSION_COOKIE_SECURE = True

# üîí NGROK/HTTPS (–î–û–ë–ê–í–õ–ï–ù–û): –≤—Å–µ–≥–¥–∞ —Å—Ç—Ä–æ–∏–º https-—Å—Å—ã–ª–∫–∏ –∏ –¥–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∞–º –ø—Ä–æ–∫—Å–∏
ACCOUNT_DEFAULT_HTTP_PROTOCOL = "https"  # ‚üµ –≤–∞–∂–Ω–æ –¥–ª—è allauth –ø—Ä–∏ DEBUG+ngrok
USE_X_FORWARDED_HOST = True              # ‚üµ —á—Ç–æ–±—ã Host –±—Ä–∞–ª—Å—è –∏–∑ X-Forwarded-Host/ngrok
SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")

# –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ —É—á–∏—Ç—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω—ã–π –ø—Ä–æ–∫—Å–∏, –µ—Å–ª–∏ –≤—ã—Å—Ç–∞–≤–ª—è–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ X-Forwarded-Proto
if os.getenv("USE_X_FORWARDED_PROTO", "False").lower() in ("true", "1", "yes"):
    SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")

# =======================
# EMAIL (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ)
# =======================
SUGGEST_NEWS_EMAIL_TO = os.getenv("SUGGEST_NEWS_EMAIL_TO", "izotovlife@yandex.ru")

EMAIL_BACKEND = os.getenv("EMAIL_BACKEND", "django.core.mail.backends.smtp.EmailBackend")
EMAIL_HOST = os.getenv("EMAIL_HOST", "smtp.yandex.ru")
EMAIL_PORT = int(os.getenv("EMAIL_PORT", 465))
EMAIL_USE_SSL = os.getenv("EMAIL_USE_SSL", "True").lower() in ("true", "1", "yes")
EMAIL_USE_TLS = os.getenv("EMAIL_USE_TLS", "False").lower() in ("true", "1", "yes")
EMAIL_HOST_USER = os.getenv("EMAIL_HOST_USER", "izotovlife@yandex.ru")
EMAIL_HOST_PASSWORD = os.getenv("EMAIL_HOST_PASSWORD", "")
DEFAULT_FROM_EMAIL = os.getenv("DEFAULT_FROM_EMAIL", EMAIL_HOST_USER)

# ‚úÖ DEV-—Ñ–æ–ª–ª–±–µ–∫: –µ—Å–ª–∏ DEBUG –∏ –Ω–µ—Ç –ø–∞—Ä–æ–ª—è SMTP, —à–ª—ë–º –ø–∏—Å—å–º–∞ –≤ –∫–æ–Ω—Å–æ–ª—å (–¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏/—Å–±—Ä–æ—Å–∞)
if DEBUG and not EMAIL_HOST_PASSWORD:
    EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"

# –ë—Ä–µ–Ω–¥ –≤ —Ç–µ–º–µ –ø–∏—Å–µ–º
EMAIL_SUBJECT_PREFIX = os.getenv("EMAIL_SUBJECT_PREFIX", "[IzotovLife] ")

# =======================
# ALLAUTH
# =======================
LOGIN_REDIRECT_URL = "/"
LOGOUT_REDIRECT_URL = "/"
ACCOUNT_EMAIL_VERIFICATION = "optional"
ACCOUNT_EMAIL_REQUIRED = True
# –ü—Ä–æ—Ç–æ–∫–æ–ª –¥–ª—è —Å—Å—ã–ª–æ–∫ allauth
ACCOUNT_DEFAULT_HTTP_PROTOCOL = "https" if not DEBUG else "http"  # ‚Üê –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –±—ã–ª–æ...
ACCOUNT_DEFAULT_HTTP_PROTOCOL = "https"  # ...–∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞ https –¥–ª—è ngrok ‚úÖ

# ‚úÖ –í—Ö–æ–¥ –ø–æ –ª–æ–≥–∏–Ω—É –ò–õ–ò e-mail (—á—Ç–æ–±—ã —Ñ–æ—Ä–º—ã –±—ã–ª–∏ –¥—Ä—É–∂–µ–ª—é–±–Ω–µ–µ)
ACCOUNT_AUTHENTICATION_METHOD = "username_email"  # ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û
ACCOUNT_USERNAME_REQUIRED = True                  # ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û

REST_USE_JWT = True
TOKEN_MODEL = None

# --- –í–ê–ñ–ù–û: –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã —Å–æ—Ü.–ª–æ–≥–∏–Ω–∞. –ù–µ –∑–∞–¥–∞—ë–º 'APP', –µ—Å–ª–∏ env –ø—É—Å—Ç ‚Äî —Ç–æ–≥–¥–∞ allauth –≤–æ–∑—å–º—ë—Ç SocialApp –∏–∑ –∞–¥–º–∏–Ω–∫–∏.
GOOGLE_CLIENT_ID = os.getenv("GOOGLE_CLIENT_ID", "").strip()
GOOGLE_SECRET = os.getenv("GOOGLE_SECRET", "").strip()
YANDEX_CLIENT_ID = os.getenv("YANDEX_CLIENT_ID", "").strip()
YANDEX_SECRET = os.getenv("YANDEX_SECRET", "").strip()
VK_CLIENT_ID = os.getenv("VK_CLIENT_ID", "").strip()
VK_SECRET = os.getenv("VK_SECRET", "").strip()

SOCIALACCOUNT_PROVIDERS = {
    "google": {},
    "yandex": {},
    "vk": {
        # –ú–æ–∂–Ω–æ –≤—Ä–µ–º–µ–Ω–Ω–æ —É–±—Ä–∞—Ç—å scope, –µ—Å–ª–∏ –≤ VK –Ω–µ –æ–¥–æ–±—Ä–µ–Ω email:
   "SCOPE": [],
    },
}

if GOOGLE_CLIENT_ID and GOOGLE_SECRET:
    SOCIALACCOUNT_PROVIDERS["google"]["APP"] = {
        "client_id": GOOGLE_CLIENT_ID,
        "secret": GOOGLE_SECRET,
        "key": "",
    }

if YANDEX_CLIENT_ID and YANDEX_SECRET:
    SOCIALACCOUNT_PROVIDERS["yandex"]["APP"] = {
        "client_id": YANDEX_CLIENT_ID,
        "secret": YANDEX_SECRET,
        "key": "",
    }

if VK_CLIENT_ID and VK_SECRET:
    SOCIALACCOUNT_PROVIDERS["vk"]["APP"] = {
        "client_id": VK_CLIENT_ID,
        "secret": VK_SECRET,
        "key": "",
    }

# ‚úÖ Dj-Rest-Auth: –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—à –∫–∞—Å—Ç–æ–º–Ω—ã–π RegisterSerializer (–≤—ã —É–∂–µ –µ–≥–æ —Ä–∞—Å—à–∏—Ä—è–ª–∏)
REST_AUTH_REGISTER_SERIALIZERS = {
    "REGISTER_SERIALIZER": "accounts.serializers.RegisterSerializer",  # ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û
}

# =======================
# –õ–û–ì–ò–†–û–í–ê–ù–ò–ï
# =======================
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {"format": "[{asctime}] {levelname} {name}: {message}", "style": "{"},
        "simple": {"format": "{levelname} {message}", "style": "{"},
    },
    "handlers": {
        "console": {"class": "logging.StreamHandler", "formatter": "simple"},
    },
    "loggers": {
        "news.api_extra_views": {
            "handlers": ["console"],
            "level": "INFO",
            "propagate": False,
        },
    },
}

# === –ù–ê–°–¢–†–û–ô–ö–ò –ü–†–û–ö–°–ò –ö–ê–†–¢–ò–ù–û–ö (–î–û–ë–ê–í–õ–ï–ù–û) ===
THUMB_CACHE_DIR = os.path.join(BASE_DIR, "media", "thumb_cache")
os.makedirs(THUMB_CACHE_DIR, exist_ok=True)

# –§–æ—Ä–º–∞—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥–µ–º –ø—ã—Ç–∞—Ç—å—Å—è –æ—Ç–¥–∞–≤–∞—Ç—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É)
THUMB_DEFAULT_FORMATS = ("webp", "jpg")  # –º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å ('avif','webp','jpg') –µ—Å–ª–∏ pillow+libavif —Å–æ–±—Ä–∞–Ω—ã

# –ö–∞—á–µ—Å—Ç–≤–æ (1‚Äì100) –¥–ª—è –ø–æ—Ç–µ—Ä—å–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
THUMB_DEFAULT_QUALITY = 82

# –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è (–≤ –±–∞–π—Ç–∞—Ö), —á—Ç–æ–±—ã –Ω–µ —É–±–∏—Ç—å —Å–µ—Ä–≤–µ—Ä –æ–≥—Ä–æ–º–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏
THUMB_MAX_ORIGINAL_BYTES = 8 * 1024 * 1024  # 8 MB

# –¢–∞–π–º–∞—É—Ç—ã –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–Ω–µ—à–Ω–∏—Ö –∫–∞—Ä—Ç–∏–Ω–æ–∫
THUMB_REQUEST_TIMEOUT = (6.0, 12.0)  # (connect, read), seconds

# –ü—É—Ç—å: backend/settings.py
# –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –î–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω—Å–æ–ª—å–Ω—ã–µ –ª–æ–≥–∏ –¥–ª—è —Å–µ—Ç–∏ –∏–º–ø–æ—Ä—Ç—ë—Ä–∞ (rssfeed.net) –Ω–µ –ª–æ–º–∞—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ LOGGING.

# --- [–î–û–ë–ê–í–õ–ï–ù–û] –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –∏–º–ø–æ—Ä—Ç—ë—Ä–∞ RSS (rssfeed.net) ---
import logging

DEFAULT_CONSOLE_HANDLER = {
    "class": "logging.StreamHandler",
    "level": "INFO",
    "formatter": "simple",
}

DEFAULT_FORMATTERS = {
    "simple": {"format": "%(asctime)s [%(levelname)s] %(name)s: %(message)s"},
}

LOGGING = globals().get("LOGGING", {"version": 1, "disable_existing_loggers": False, "handlers": {}, "formatters": {}, "loggers": {}})

# –û–±—ä–µ–¥–∏–Ω–∏–º —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä—ã/–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ (–Ω–µ –∑–∞—Ç–∏—Ä–∞—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ)
LOGGING.setdefault("formatters", {}).update({k: v for k, v in DEFAULT_FORMATTERS.items() if k not in LOGGING["formatters"]})
LOGGING.setdefault("handlers", {})
if "console" not in LOGGING["handlers"]:
    LOGGING["handlers"]["console"] = DEFAULT_CONSOLE_HANDLER

# –¢–æ—á–µ—á–Ω—ã–µ –ª–æ–≥–≥–µ—Ä—ã
LOGGING.setdefault("loggers", {}).update({
    # —Å–µ—Ç–µ–≤–æ–π —Å–ª–æ–π –∏–º–ø–æ—Ä—Ç—ë—Ä–∞: —É–≤–∏–¥–∏—Ç–µ –∫–æ–¥—ã —Ç–∏–ø–∞ LOCAL_BLOCKED_10013, TIMEOUT_* –∏ —Ç.–ø.
    "rssfeed.net": {
        "handlers": ["console"],
        "level": "INFO",
        "propagate": False,
    },
    # —Å–∞–º–∞ –∫–æ–º–∞–Ω–¥–∞ –∏–º–ø–æ—Ä—Ç–∞ (–µ—Å–ª–∏ –≤—ã –ª–æ–≥–∏—Ä—É–µ—Ç–µ –ø–æ–¥ —ç—Ç–∏–º –∏–º–µ–Ω–µ–º)
    "rssfeed": {
        "handlers": ["console"],
        "level": "INFO",
        "propagate": True,
    },
})
# –ü—É—Ç—å: backend/settings.py
# –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –ú—è–≥–∫–∏–π –æ–≤–µ—Ä—Ä–∞–π–¥ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ –¥–ª—è allauth –≤ –õ–û–ö–ê–õ–¨–ù–û–ô —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –±–µ–∑ ngrok.
# –ù–ò–ß–ï–ì–û –ù–ï –£–î–ê–õ–Ø–ï–ú ‚Äî –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ.
if DEBUG and not NGROK_HTTPS_DOMAIN:
    ACCOUNT_DEFAULT_HTTP_PROTOCOL = "http"
