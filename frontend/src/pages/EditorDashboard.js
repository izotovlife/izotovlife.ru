// frontend/src/pages/EditorDashboard.js
// –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ ‚Äî –º–æ–¥–µ—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç–µ–π –∞–≤—Ç–æ—Ä–æ–≤.
// –ü—É—Ç—å: frontend/src/pages/EditorDashboard.js

import React, { useEffect, useState } from "react";
import { fetchModerationQueue, reviewArticle } from "../Api";

export default function EditorDashboard() {
  const [articles, setArticles] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    loadArticles();
  }, []);

  async function loadArticles() {
    setLoading(true);
    try {
      const data = await fetchModerationQueue();

      // üëá –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –∫ –º–∞—Å—Å–∏–≤—É
      if (Array.isArray(data)) {
        setArticles(data);
      } else if (data?.results) {
        setArticles(data.results);
      } else {
        setArticles([]);
      }
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—á–µ—Ä–µ–¥–∏ –º–æ–¥–µ—Ä–∞—Ü–∏–∏:", err);
      setArticles([]);
    } finally {
      setLoading(false);
    }
  }

  async function handleReview(id, action) {
    const notes = prompt(
      action === "revise"
        ? "–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ –¥–æ—Ä–∞–±–æ—Ç–∫—É"
        : "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
    );

    await reviewArticle(id, action, notes || "");
    alert(action === "publish" ? "–°—Ç–∞—Ç—å—è –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞" : "–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –¥–æ—Ä–∞–±–æ—Ç–∫—É");

    setArticles((prev) => prev.filter((a) => a.id !== id));
  }

  return (
    <div className="editor-dashboard max-w-3xl mx-auto px-4 py-6">
      <h1 className="text-2xl font-bold text-white mb-6">–ö–∞–±–∏–Ω–µ—Ç —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞</h1>

      {loading ? (
        <p className="text-gray-400">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
      ) : articles.length === 0 ? (
        <p className="text-gray-400">–û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞</p>
      ) : (
        <div className="space-y-4">
          {articles.map((a) => (
            <div key={a.id} className="card border border-gray-700 rounded-lg p-4 bg-gray-900">
              <h3 className="text-lg font-bold text-white">{a.title}</h3>
              {a.cover_image && (
                <img
                  src={a.cover_image}
                  alt=""
                  className="mt-2 max-h-40 rounded-md"
                />
              )}
              <div
                className="prose prose-invert mt-2"
                dangerouslySetInnerHTML={{ __html: a.content }}
              />
              <div className="mt-4 flex gap-3">
                <button
                  onClick={() => handleReview(a.id, "publish")}
                  className="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded"
                >
                  –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å
                </button>
                <button
                  onClick={() => handleReview(a.id, "revise")}
                  className="bg-yellow-500 hover:bg-yellow-600 text-black px-4 py-2 rounded"
                >
                  –ù–∞ –¥–æ—Ä–∞–±–æ—Ç–∫—É
                </button>
              </div>
            </div>
          ))}
        </div>
      )}
    </div>
  );
}
