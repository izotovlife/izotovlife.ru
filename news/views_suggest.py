# –ü—É—Ç—å: backend/news/views_suggest.py
# –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã "–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å" (SuggestNewsView)
# –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
#   ‚úÖ –ü—Ä–∏–Ω–∏–º–∞–µ—Ç POST-–∑–∞–ø—Ä–æ—Å—ã —Å JSON –∏ multipart/form-data
#   ‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ñ–∞–π–ª–æ–≤: image –∏ video
#   ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–ø—á–∏
#   ‚úÖ –°–æ–∑–¥–∞–µ—Ç —á–µ—Ä–Ω–æ–≤–∏–∫ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –Ω–æ–≤–æ—Å—Ç–∏
#   ‚úÖ –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, slug, –¥–∞—Ç—ã –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
#   ‚úÖ –ê–≤—Ç–æ-–≥–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ link –¥–ª—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
#   ‚úÖ –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç JSON —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –∏–ª–∏ –æ—à–∏–±–∫–æ–π

from rest_framework.views import APIView
from rest_framework.response import Response
from rest_framework import status
from .models import ImportedNews, Category
from django.utils import timezone
from unidecode import unidecode
from django.utils.text import slugify
import re
import uuid
import requests

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–ø—á–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, Google reCAPTCHA v2)
RECAPTCHA_SECRET_KEY = "–í–ê–®_–°–ï–ö–†–ï–¢–ù–´–ô_–ö–õ–Æ–ß_RECAPTCHA"

class SuggestNewsView(APIView):
    """
    API –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
    –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç:
    - title (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π)
    - summary (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    - category (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, slug –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)
    - image (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, —Ñ–∞–π–ª)
    - video (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, —Ñ–∞–π–ª)
    - recaptcha_token (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π)
    """

    def post(self, request, *args, **kwargs):
        data = request.data

        # üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø–æ–ª—è title
        title = data.get("title")
        if not title:
            return Response({"detail": "–ü–æ–ª–µ 'title' –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ"}, status=status.HTTP_400_BAD_REQUEST)

        # üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–ø—á–∏
        recaptcha_token = data.get("recaptcha_token")
        if not recaptcha_token:
            return Response({"detail": "–ö–∞–ø—á–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞"}, status=status.HTTP_400_BAD_REQUEST)

        recaptcha_response = requests.post(
            "https://www.google.com/recaptcha/api/siteverify",
            data={"secret": RECAPTCHA_SECRET_KEY, "response": recaptcha_token}
        ).json()

        if not recaptcha_response.get("success"):
            return Response({"detail": "–ù–µ–≤–µ—Ä–Ω–∞—è –∫–∞–ø—á–∞"}, status=status.HTTP_400_BAD_REQUEST)

        summary = data.get("summary", "")
        category_slug = data.get("category")

        # üîπ –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
        category = None
        if category_slug:
            try:
                category = Category.objects.get(slug=category_slug)
            except Category.DoesNotExist:
                pass

        # üîπ –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π slug
        base_slug = slugify(unidecode(title))[:60] or str(timezone.now().timestamp())[:8]
        base_slug = re.sub(r"-+", "-", base_slug)
        new_slug = base_slug
        counter = 1
        while ImportedNews.objects.filter(slug=new_slug).exists():
            new_slug = f"{base_slug}-{counter}"
            counter += 1

        # üîπ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ link
        link = data.get("link")
        if not link:
            link = str(uuid.uuid4())

        # üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º—ã–µ —Ñ–∞–π–ª—ã
        image_file = request.FILES.get("image")  # django ImageField
        video_file = request.FILES.get("video")  # django FileField –¥–ª—è –≤–∏–¥–µ–æ

        # üîπ –°–æ–∑–¥–∞–µ–º —á–µ—Ä–Ω–æ–≤–∏–∫ –Ω–æ–≤–æ—Å—Ç–∏
        news = ImportedNews.objects.create(
            title=title,
            summary=summary,
            category=category,
            slug=new_slug,
            link=link,
            published_at=timezone.now(),
            image=image_file or None,
            video=video_file or None,
        )

        return Response({
            "detail": "–ù–æ–≤–æ—Å—Ç—å —É—Å–ø–µ—à–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∞",
            "id": news.id,
            "slug": news.slug,
            "seo_path": news.seo_path,
        }, status=status.HTTP_201_CREATED)
